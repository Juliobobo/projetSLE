// ----------------------------------------------------------------------------
// SystemC Header for Top
//
//    HLS version: 2011a.200 Production Release
//       HLS date: Mon Jun  2 22:10:04 PDT 2014
//  Flow Packages: HDL_Tcl 2008a.1, SCVerify 2009a.1
//
//   Generated by: xph3sle512@cimeld21
// Generated date: Wed Feb 01 14:05:43 CET 2017
//
// ----------------------------------------------------------------------------
// 
// -------------------------------------
// scverify_top
// top module instantiating reference design,
// DUT and comparator
// -------------------------------------
// 
#ifndef INCLUDED_SCVERIFY_TOP_H
#define INCLUDED_SCVERIFY_TOP_H

#ifndef TO_QUOTED_STRING
#define TO_QUOTED_STRING(x) TO_QUOTED_STRING1(x)
#define TO_QUOTED_STRING1(x) #x
#endif
#ifndef TOP_HDL_ENTITY
#define TOP_HDL_ENTITY Main_Only_Comp_Decomp_Main_Fonction
#endif

// Hold time for the SCVerify testbench to account for the gate delay after downstream synthesis in pico second(s)
// Hold time value is obtained from 'top_gate_constraints.cpp', which is generated at the end of RTL synthesis
#ifdef CCS_DUT_GATE
extern double __scv_hold_time;
extern double __scv_hold_time_RSCID_1;
extern double __scv_hold_time_RSCID_2;
extern double __scv_hold_time_RSCID_3;
extern double __scv_hold_time_RSCID_4;
extern double __scv_hold_time_RSCID_5;
#else
double __scv_hold_time = 0.0; // default for non-gate simulation is zero
double __scv_hold_time_RSCID_1 = 0.0;
double __scv_hold_time_RSCID_2 = 0.0;
double __scv_hold_time_RSCID_3 = 0.0;
double __scv_hold_time_RSCID_4 = 0.0;
double __scv_hold_time_RSCID_5 = 0.0;
#endif


#include "mc_testbench.h"
#include "mc_reset.h"
#include "mc_transactors.h"
#include "/softslin/catapult2011a_200_12/Mgc_home/pkgs/siflibs/ram_fpga_singleport_RF_trans_rsc.h"
#include "mgc_ioport_trans_rsc.h"
#include "mc_monitor.h"
#include "mc_dut_wrapper.h"


class scverify_top : public sc_module
{
public:
   // Interface Ports
   
   // Data objects
   sc_event deadlock_event;
   sc_signal< sc_logic >                      deadlocked;
   sc_event reset_deactivation_event;
   sc_signal< sc_logic >                      rst;
   sc_signal< sc_logic >                      rst_n;
   bool var_trdone;
   sc_signal< sc_logic >                      OFS_Main_Only_Comp_Decomp_Main_Fonction_core_inst_core_wen;
   sc_signal< sc_logic >                      OFS_mgc_start_sync_mgc_bsync_vld_vd;
   sc_clock clk;
   sc_signal< sc_logic >                      TLS_rst;
   sc_signal< sc_logic >                      in_sync;
   sc_signal< sc_logic >                      out_sync;
   sc_signal< sc_logic >                      inout_sync;
   sc_signal< unsigned >                      wait_for_init;
   sc_signal< sc_logic >                      catapult_start;
   sc_signal< sc_logic >                      catapult_done;
   sc_signal< sc_logic >                      catapult_ready;
   sc_signal< sc_lv<8> >                      TLS_Src_rsc_singleport_data_in;
   sc_signal< sc_lv<17> >                     TLS_Src_rsc_singleport_addr;
   sc_signal< sc_lv<1> >                      TLS_Src_rsc_singleport_re;
   sc_signal< sc_lv<1> >                      TLS_Src_rsc_singleport_we;
   sc_signal< sc_lv<8> >                      TLS_Src_rsc_singleport_data_out;
   sc_signal< sc_logic >                      EN_Src_rsc_INST_en;
   sc_signal< sc_lv<8> >                      TLS_Comp_rsc_singleport_data_in;
   sc_signal< sc_lv<17> >                     TLS_Comp_rsc_singleport_addr;
   sc_signal< sc_lv<1> >                      TLS_Comp_rsc_singleport_re;
   sc_signal< sc_lv<1> >                      TLS_Comp_rsc_singleport_we;
   sc_signal< sc_lv<8> >                      TLS_Comp_rsc_singleport_data_out;
   sc_signal< sc_logic >                      EN_Comp_rsc_INST_en;
   sc_signal< sc_lv<8> >                      TLS_Vga_rsc_singleport_data_in;
   sc_signal< sc_lv<17> >                     TLS_Vga_rsc_singleport_addr;
   sc_signal< sc_lv<1> >                      TLS_Vga_rsc_singleport_re;
   sc_signal< sc_lv<1> >                      TLS_Vga_rsc_singleport_we;
   sc_signal< sc_lv<8> >                      TLS_Vga_rsc_singleport_data_out;
   sc_signal< sc_logic >                      EN_Vga_rsc_INST_en;
   sc_signal< sc_lv<32> >                     TLS_Main_Only_Comp_Decomp_Main_Fonction_return_rsc_z;
   tlm::tlm_fifo< mc_wait_ctrl > TLS_in_wait_ctrl_fifo_Src;
   tlm::tlm_fifo< mgc_sysc_ver_array1D<ac_int<8, false >,76800> > TLS_fifo_in_Src;
   sc_signal< sc_logic >                      TLS_Src_triosy_lz;
   tlm::tlm_fifo< mc_wait_ctrl > TLS_out_wait_ctrl_fifo_Comp;
   tlm::tlm_fifo< mgc_sysc_ver_array1D<ac_int<8, false >,76800> > TLS_fifo_out_Comp;
   tlm::tlm_fifo< mc_wait_ctrl > TLS_in_wait_ctrl_fifo_Comp;
   tlm::tlm_fifo< mgc_sysc_ver_array1D<ac_int<8, false >,76800> > TLS_fifo_in_Comp;
   sc_signal< sc_logic >                      TLS_Comp_triosy_lz;
   tlm::tlm_fifo< mc_wait_ctrl > TLS_out_wait_ctrl_fifo_Vga;
   tlm::tlm_fifo< mgc_sysc_ver_array1D<ac_int<8, false >,76800> > TLS_fifo_out_Vga;
   sc_signal< sc_logic >                      TLS_Vga_triosy_lz;
   tlm::tlm_fifo< mc_wait_ctrl > TLS_out_wait_ctrl_fifo_Main_Only_Comp_Decomp__Main_Fonction_return;
   tlm::tlm_fifo< int > TLS_fifo_out_Main_Only_Comp_Decomp__Main_Fonction_return;
   sc_signal< sc_logic >                      TLS_Main_Only_Comp_Decomp_Main_Fonction_return_triosy_lz;
   sc_signal< sc_logic >                      NC_nblevels_triosy_lz;
   tlm::tlm_fifo< ac_int<4, false > > TLS_fifo_dummy_nblevels;
   tlm::tlm_fifo< mc_wait_ctrl > TLS_fifo_dummy_wait_ctrl_nblevels;
   
   // Named Objects
   
   // Module instance pointers
   ccs_DUT_wrapper *Main_Only_Comp_Decomp_Main_Fonction_INST;
   mc_programmable_reset *rst_driver;
   catapult_monitor *catapult_monitor_INST;
   ram_fpga_singleport_RF_trans_rsc< 1,76800,8,17,0,1,0,0,0,1,1,1,0 > *Src_rsc_INST;
   ram_fpga_singleport_RF_trans_rsc< 2,76800,8,17,0,1,0,0,0,1,1,1,0 > *Comp_rsc_INST;
   ram_fpga_singleport_RF_trans_rsc< 3,76800,8,17,0,1,0,0,0,1,1,1,0 > *Vga_rsc_INST;
   mgc_out_stdreg_trans_rsc< 1,32 > *Main_Only_Comp_Decomp_Main_Fonction_return_rsc_INST;
   mc_input_transactor<mgc_sysc_ver_array1D<ac_int<8, false >,76800>,8,false> *Src_transactor;
   mc_trios_input_monitor *trios_monitor_Src_INST;
   mc_inout_transactor<mgc_sysc_ver_array1D<ac_int<8, false >,76800>,8,false> *Comp_transactor;
   mc_trios_inout_monitor *trios_monitor_Comp_INST;
   mc_output_transactor<mgc_sysc_ver_array1D<ac_int<8, false >,76800>,8,false> *Vga_transactor;
   mc_trios_output_monitor *trios_monitor_Vga_INST;
   mc_output_transactor<int,32,true> *Main_Only_Comp_Decomp__Main_Fonction_return_transactor;
   mc_trios_output_monitor *trios_monitor_Main_Only_Comp_Decomp__Main_Fonction_return_INST;
   testbench *testbench_INST;
   
   // Declare processes (SC_METHOD and SC_THREAD)
   void deadlock_notify();
   void deadlock_watch();
   void generate_outsync();
   void generate_insync();
   void generate_reset();
   
   // Constructor
   SC_HAS_PROCESS(scverify_top);
   scverify_top(
      const sc_module_name& name
   )
      : deadlocked("deadlocked")
      , rst("rst")
      , rst_n("rst_n")
      , var_trdone(false)
      , OFS_Main_Only_Comp_Decomp_Main_Fonction_core_inst_core_wen("OFS_Main_Only_Comp_Decomp_Main_Fonction_core_inst_core_wen")
      , OFS_mgc_start_sync_mgc_bsync_vld_vd("OFS_mgc_start_sync_mgc_bsync_vld_vd")
      , clk("clk",41.666667,SC_NS,0.49991999600064,0.000000,SC_NS,false)
      , TLS_rst("TLS_rst")
      , in_sync("in_sync")
      , out_sync("out_sync")
      , inout_sync("inout_sync")
      , wait_for_init("wait_for_init")
      , catapult_start("catapult_start")
      , catapult_done("catapult_done")
      , catapult_ready("catapult_ready")
      , TLS_Src_rsc_singleport_data_in("TLS_Src_rsc_singleport_data_in")
      , TLS_Src_rsc_singleport_addr("TLS_Src_rsc_singleport_addr")
      , TLS_Src_rsc_singleport_re("TLS_Src_rsc_singleport_re")
      , TLS_Src_rsc_singleport_we("TLS_Src_rsc_singleport_we")
      , TLS_Src_rsc_singleport_data_out("TLS_Src_rsc_singleport_data_out")
      , EN_Src_rsc_INST_en("EN_Src_rsc_INST_en")
      , TLS_Comp_rsc_singleport_data_in("TLS_Comp_rsc_singleport_data_in")
      , TLS_Comp_rsc_singleport_addr("TLS_Comp_rsc_singleport_addr")
      , TLS_Comp_rsc_singleport_re("TLS_Comp_rsc_singleport_re")
      , TLS_Comp_rsc_singleport_we("TLS_Comp_rsc_singleport_we")
      , TLS_Comp_rsc_singleport_data_out("TLS_Comp_rsc_singleport_data_out")
      , EN_Comp_rsc_INST_en("EN_Comp_rsc_INST_en")
      , TLS_Vga_rsc_singleport_data_in("TLS_Vga_rsc_singleport_data_in")
      , TLS_Vga_rsc_singleport_addr("TLS_Vga_rsc_singleport_addr")
      , TLS_Vga_rsc_singleport_re("TLS_Vga_rsc_singleport_re")
      , TLS_Vga_rsc_singleport_we("TLS_Vga_rsc_singleport_we")
      , TLS_Vga_rsc_singleport_data_out("TLS_Vga_rsc_singleport_data_out")
      , EN_Vga_rsc_INST_en("EN_Vga_rsc_INST_en")
      , TLS_Main_Only_Comp_Decomp_Main_Fonction_return_rsc_z("TLS_Main_Only_Comp_Decomp_Main_Fonction_return_rsc_z")
      , TLS_in_wait_ctrl_fifo_Src("TLS_in_wait_ctrl_fifo_Src",-1)
      , TLS_fifo_in_Src("TLS_fifo_in_Src",-1)
      , TLS_Src_triosy_lz("TLS_Src_triosy_lz")
      , TLS_out_wait_ctrl_fifo_Comp("TLS_out_wait_ctrl_fifo_Comp",-1)
      , TLS_fifo_out_Comp("TLS_fifo_out_Comp",-1)
      , TLS_in_wait_ctrl_fifo_Comp("TLS_in_wait_ctrl_fifo_Comp",-1)
      , TLS_fifo_in_Comp("TLS_fifo_in_Comp",-1)
      , TLS_Comp_triosy_lz("TLS_Comp_triosy_lz")
      , TLS_out_wait_ctrl_fifo_Vga("TLS_out_wait_ctrl_fifo_Vga",-1)
      , TLS_fifo_out_Vga("TLS_fifo_out_Vga",-1)
      , TLS_Vga_triosy_lz("TLS_Vga_triosy_lz")
      , TLS_out_wait_ctrl_fifo_Main_Only_Comp_Decomp__Main_Fonction_return("TLS_out_wait_ctrl_fifo_Main_Only_Comp_Decomp__Main_Fonction_return",-1)
      , TLS_fifo_out_Main_Only_Comp_Decomp__Main_Fonction_return("TLS_fifo_out_Main_Only_Comp_Decomp__Main_Fonction_return",-1)
      , TLS_Main_Only_Comp_Decomp_Main_Fonction_return_triosy_lz("TLS_Main_Only_Comp_Decomp_Main_Fonction_return_triosy_lz")
      , NC_nblevels_triosy_lz("NC_nblevels_triosy_lz")
      , TLS_fifo_dummy_nblevels("TLS_fifo_dummy_nblevels",1)
      , TLS_fifo_dummy_wait_ctrl_nblevels("TLS_fifo_dummy_wait_ctrl_nblevels",1)
   {
      // Instantiate other modules
      Main_Only_Comp_Decomp_Main_Fonction_INST = new ccs_DUT_wrapper(
         "rtl",
         TO_QUOTED_STRING(TOP_HDL_ENTITY)
      );
      Main_Only_Comp_Decomp_Main_Fonction_INST->start(catapult_start);
      Main_Only_Comp_Decomp_Main_Fonction_INST->done(catapult_done);
      Main_Only_Comp_Decomp_Main_Fonction_INST->clk(clk);
      Main_Only_Comp_Decomp_Main_Fonction_INST->rst(TLS_rst);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Src_rsc_singleport_data_in(TLS_Src_rsc_singleport_data_in);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Src_rsc_singleport_addr(TLS_Src_rsc_singleport_addr);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Src_rsc_singleport_re(TLS_Src_rsc_singleport_re);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Src_rsc_singleport_we(TLS_Src_rsc_singleport_we);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Src_rsc_singleport_data_out(TLS_Src_rsc_singleport_data_out);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Comp_rsc_singleport_data_in(TLS_Comp_rsc_singleport_data_in);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Comp_rsc_singleport_addr(TLS_Comp_rsc_singleport_addr);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Comp_rsc_singleport_re(TLS_Comp_rsc_singleport_re);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Comp_rsc_singleport_we(TLS_Comp_rsc_singleport_we);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Comp_rsc_singleport_data_out(TLS_Comp_rsc_singleport_data_out);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Vga_rsc_singleport_data_in(TLS_Vga_rsc_singleport_data_in);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Vga_rsc_singleport_addr(TLS_Vga_rsc_singleport_addr);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Vga_rsc_singleport_re(TLS_Vga_rsc_singleport_re);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Vga_rsc_singleport_we(TLS_Vga_rsc_singleport_we);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Vga_rsc_singleport_data_out(TLS_Vga_rsc_singleport_data_out);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Main_Only_Comp_Decomp_Main_Fonction_return_rsc_z(TLS_Main_Only_Comp_Decomp_Main_Fonction_return_rsc_z);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Src_triosy_lz(TLS_Src_triosy_lz);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Comp_triosy_lz(TLS_Comp_triosy_lz);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Vga_triosy_lz(TLS_Vga_triosy_lz);
      Main_Only_Comp_Decomp_Main_Fonction_INST->nblevels_triosy_lz(NC_nblevels_triosy_lz);
      Main_Only_Comp_Decomp_Main_Fonction_INST->Main_Only_Comp_Decomp_Main_Fonction_return_triosy_lz(TLS_Main_Only_Comp_Decomp_Main_Fonction_return_triosy_lz);
      
      rst_driver = new mc_programmable_reset(
         "rst_driver",
         166.666668,
         0
      );
      rst_driver->reset_out(TLS_rst);
      
      catapult_monitor_INST = new catapult_monitor(
         "Monitor",
         clk,
         true,
         1616193LL,
         1616193LL
      );
      catapult_monitor_INST->rst(rst);
      
      Src_rsc_INST = new ram_fpga_singleport_RF_trans_rsc< 1,76800,8,17,0,1,0,0,0,1,1,1,0 > (
         "Src_rsc",
         true
      );
      Src_rsc_INST->data_in(TLS_Src_rsc_singleport_data_in);
      Src_rsc_INST->addr(TLS_Src_rsc_singleport_addr);
      Src_rsc_INST->re(TLS_Src_rsc_singleport_re);
      Src_rsc_INST->we(TLS_Src_rsc_singleport_we);
      Src_rsc_INST->data_out(TLS_Src_rsc_singleport_data_out);
      Src_rsc_INST->clk(clk);
      Src_rsc_INST->a_rst(rst);
      Src_rsc_INST->s_rst(TLS_rst);
      Src_rsc_INST->en(EN_Src_rsc_INST_en);
      Src_rsc_INST->add_attribute(*(new sc_attribute<double>("CLK_SKEW_DELAY", __scv_hold_time_RSCID_1 )));
      
      Comp_rsc_INST = new ram_fpga_singleport_RF_trans_rsc< 2,76800,8,17,0,1,0,0,0,1,1,1,0 > (
         "Comp_rsc",
         true
      );
      Comp_rsc_INST->data_in(TLS_Comp_rsc_singleport_data_in);
      Comp_rsc_INST->addr(TLS_Comp_rsc_singleport_addr);
      Comp_rsc_INST->re(TLS_Comp_rsc_singleport_re);
      Comp_rsc_INST->we(TLS_Comp_rsc_singleport_we);
      Comp_rsc_INST->data_out(TLS_Comp_rsc_singleport_data_out);
      Comp_rsc_INST->clk(clk);
      Comp_rsc_INST->a_rst(rst);
      Comp_rsc_INST->s_rst(TLS_rst);
      Comp_rsc_INST->en(EN_Comp_rsc_INST_en);
      Comp_rsc_INST->add_attribute(*(new sc_attribute<double>("CLK_SKEW_DELAY", __scv_hold_time_RSCID_2 )));
      
      Vga_rsc_INST = new ram_fpga_singleport_RF_trans_rsc< 3,76800,8,17,0,1,0,0,0,1,1,1,0 > (
         "Vga_rsc",
         true
      );
      Vga_rsc_INST->data_in(TLS_Vga_rsc_singleport_data_in);
      Vga_rsc_INST->addr(TLS_Vga_rsc_singleport_addr);
      Vga_rsc_INST->re(TLS_Vga_rsc_singleport_re);
      Vga_rsc_INST->we(TLS_Vga_rsc_singleport_we);
      Vga_rsc_INST->data_out(TLS_Vga_rsc_singleport_data_out);
      Vga_rsc_INST->clk(clk);
      Vga_rsc_INST->a_rst(rst);
      Vga_rsc_INST->s_rst(TLS_rst);
      Vga_rsc_INST->en(EN_Vga_rsc_INST_en);
      Vga_rsc_INST->add_attribute(*(new sc_attribute<double>("CLK_SKEW_DELAY", __scv_hold_time_RSCID_3 )));
      
      Main_Only_Comp_Decomp_Main_Fonction_return_rsc_INST = new mgc_out_stdreg_trans_rsc< 1,32 > (
         "Main_Only_Comp_Decomp_Main_Fonction_return_rsc",
         true
      );
      Main_Only_Comp_Decomp_Main_Fonction_return_rsc_INST->z(TLS_Main_Only_Comp_Decomp_Main_Fonction_return_rsc_z);
      Main_Only_Comp_Decomp_Main_Fonction_return_rsc_INST->clk(clk);
      Main_Only_Comp_Decomp_Main_Fonction_return_rsc_INST->add_attribute(*(new sc_attribute<double>("CLK_SKEW_DELAY", __scv_hold_time_RSCID_5 )));
      
      Src_transactor = new mc_input_transactor<mgc_sysc_ver_array1D<ac_int<8, false >,76800>,8,false> (
         "transactor_Src",
         0,
         8,
         0,
         false
      );
      Src_transactor->in_wait_ctrl_fifo(TLS_in_wait_ctrl_fifo_Src);
      Src_transactor->in_fifo(TLS_fifo_in_Src);
      Src_transactor->add_attribute(*(new sc_attribute<int>("MC_TRANSACTOR_EVENT", MC_TRANSACTOR_UNDERFLOW | MC_TRANSACTOR_WAIT )));
      Src_transactor->bind_clk(clk,true);
      Src_transactor->register_block(Src_rsc_INST,Src_rsc_INST->basename(),TLS_Src_triosy_lz,0,76799,1);
      
      trios_monitor_Src_INST = new mc_trios_input_monitor(
         "Src_trios_mon"
      );
      trios_monitor_Src_INST->trios(TLS_Src_triosy_lz);
      trios_monitor_Src_INST->register_mon(catapult_monitor_INST);
      
      Comp_transactor = new mc_inout_transactor<mgc_sysc_ver_array1D<ac_int<8, false >,76800>,8,false> (
         "transactor_Comp",
         0,
         8,
         0
      );
      Comp_transactor->in_wait_ctrl_fifo(TLS_in_wait_ctrl_fifo_Comp);
      Comp_transactor->in_fifo(TLS_fifo_in_Comp);
      Comp_transactor->out_wait_ctrl_fifo(TLS_out_wait_ctrl_fifo_Comp);
      Comp_transactor->out_fifo(TLS_fifo_out_Comp);
      Comp_transactor->add_attribute(*(new sc_attribute<int>("MC_TRANSACTOR_EVENT", MC_TRANSACTOR_UNDERFLOW | MC_TRANSACTOR_WAIT )));
      Comp_transactor->bind_clk(clk,true);
      Comp_transactor->register_block(Comp_rsc_INST,Comp_rsc_INST->basename(),TLS_Comp_triosy_lz,0,76799,1);
      
      trios_monitor_Comp_INST = new mc_trios_inout_monitor(
         "Comp_trios_mon"
      );
      trios_monitor_Comp_INST->trios(TLS_Comp_triosy_lz);
      trios_monitor_Comp_INST->register_mon(catapult_monitor_INST);
      
      Vga_transactor = new mc_output_transactor<mgc_sysc_ver_array1D<ac_int<8, false >,76800>,8,false> (
         "transactor_Vga",
         0,
         8,
         0
      );
      Vga_transactor->out_wait_ctrl_fifo(TLS_out_wait_ctrl_fifo_Vga);
      Vga_transactor->out_fifo(TLS_fifo_out_Vga);
      Vga_transactor->add_attribute(*(new sc_attribute<int>("MC_TRANSACTOR_EVENT", MC_TRANSACTOR_UNDERFLOW | MC_TRANSACTOR_WAIT )));
      Vga_transactor->bind_clk(clk,true);
      Vga_transactor->register_block(Vga_rsc_INST,Vga_rsc_INST->basename(),TLS_Vga_triosy_lz,0,76799,1);
      
      trios_monitor_Vga_INST = new mc_trios_output_monitor(
         "Vga_trios_mon"
      );
      trios_monitor_Vga_INST->trios(TLS_Vga_triosy_lz);
      trios_monitor_Vga_INST->register_mon(catapult_monitor_INST);
      
      Main_Only_Comp_Decomp__Main_Fonction_return_transactor = new mc_output_transactor<int,32,true> (
         "transactor_Main_Only_Comp_Decomp__Main_Fonction_return",
         0,
         32,
         0
      );
      Main_Only_Comp_Decomp__Main_Fonction_return_transactor->out_wait_ctrl_fifo(TLS_out_wait_ctrl_fifo_Main_Only_Comp_Decomp__Main_Fonction_return);
      Main_Only_Comp_Decomp__Main_Fonction_return_transactor->out_fifo(TLS_fifo_out_Main_Only_Comp_Decomp__Main_Fonction_return);
      Main_Only_Comp_Decomp__Main_Fonction_return_transactor->add_attribute(*(new sc_attribute<int>("MC_TRANSACTOR_EVENT", MC_TRANSACTOR_UNDERFLOW | MC_TRANSACTOR_WAIT )));
      Main_Only_Comp_Decomp__Main_Fonction_return_transactor->bind_clk(clk,true);
      Main_Only_Comp_Decomp__Main_Fonction_return_transactor->register_block(Main_Only_Comp_Decomp_Main_Fonction_return_rsc_INST,Main_Only_Comp_Decomp_Main_Fonction_return_rsc_INST->basename(),TLS_Main_Only_Comp_Decomp_Main_Fonction_return_triosy_lz,0,0,1);
      
      trios_monitor_Main_Only_Comp_Decomp__Main_Fonction_return_INST = new mc_trios_output_monitor(
         "Main_Only_Comp_Decomp__Main_Fonction_return_trios_mon"
      );
      trios_monitor_Main_Only_Comp_Decomp__Main_Fonction_return_INST->trios(TLS_Main_Only_Comp_Decomp_Main_Fonction_return_triosy_lz);
      trios_monitor_Main_Only_Comp_Decomp__Main_Fonction_return_INST->register_mon(catapult_monitor_INST);
      
      testbench_INST = new testbench(
         "user_tb"
      );
      testbench_INST->clk(clk);
      testbench_INST->ccs_Src(TLS_fifo_in_Src);
      testbench_INST->ccs_wait_ctrl_Src(TLS_in_wait_ctrl_fifo_Src);
      testbench_INST->ccs_Comp_IN(TLS_fifo_in_Comp);
      testbench_INST->ccs_wait_ctrl_Comp_IN(TLS_in_wait_ctrl_fifo_Comp);
      testbench_INST->ccs_Comp(TLS_fifo_out_Comp);
      testbench_INST->ccs_wait_ctrl_Comp(TLS_out_wait_ctrl_fifo_Comp);
      testbench_INST->ccs_Vga(TLS_fifo_out_Vga);
      testbench_INST->ccs_wait_ctrl_Vga(TLS_out_wait_ctrl_fifo_Vga);
      testbench_INST->ccs_nblevels(TLS_fifo_dummy_nblevels);
      testbench_INST->ccs_wait_ctrl_nblevels(TLS_fifo_dummy_wait_ctrl_nblevels);
      testbench_INST->ccs_Main_Only_Comp_Decomp__Main_Fonction_return(TLS_fifo_out_Main_Only_Comp_Decomp__Main_Fonction_return);
      testbench_INST->ccs_wait_ctrl_Main_Only_Comp_Decomp__Main_Fonction_return(TLS_out_wait_ctrl_fifo_Main_Only_Comp_Decomp__Main_Fonction_return);
      
      
      // Register processes
      SC_METHOD(deadlock_notify);
      sensitive << deadlock_event;
      dont_initialize();
      SC_METHOD(deadlock_watch);
      sensitive  << OFS_Main_Only_Comp_Decomp_Main_Fonction_core_inst_core_wen << clk;
      dont_initialize();
      SC_METHOD(generate_outsync);
      sensitive << clk << catapult_done << rst;
      dont_initialize();
      SC_METHOD(generate_insync);
      sensitive << clk << catapult_done << rst;
      dont_initialize();
      SC_METHOD(generate_reset);
      sensitive << reset_deactivation_event;
      // Other constructor statements
      testbench::register_end_of_testbench_obj(catapult_monitor_INST);
      // set seed for random number generator used by wait_ctrl
      mt19937_init_genrand(19650218UL);
      install_observe_foreign_signals();
      EN_Src_rsc_INST_en = (0) ? sc_dt::SC_LOGIC_1 : sc_dt::SC_LOGIC_0;
      EN_Comp_rsc_INST_en = (0) ? sc_dt::SC_LOGIC_1 : sc_dt::SC_LOGIC_0;
      EN_Vga_rsc_INST_en = (0) ? sc_dt::SC_LOGIC_1 : sc_dt::SC_LOGIC_0;
      testbench_INST->_capture_nblevels = false;
   }
   
   ~scverify_top()
   {
      delete Main_Only_Comp_Decomp_Main_Fonction_INST;
      Main_Only_Comp_Decomp_Main_Fonction_INST = 0;
      delete rst_driver;
      rst_driver = 0;
      delete catapult_monitor_INST;
      catapult_monitor_INST = 0;
      delete Src_rsc_INST;
      Src_rsc_INST = 0;
      delete Comp_rsc_INST;
      Comp_rsc_INST = 0;
      delete Vga_rsc_INST;
      Vga_rsc_INST = 0;
      delete Main_Only_Comp_Decomp_Main_Fonction_return_rsc_INST;
      Main_Only_Comp_Decomp_Main_Fonction_return_rsc_INST = 0;
      delete Src_transactor;
      Src_transactor = 0;
      delete trios_monitor_Src_INST;
      trios_monitor_Src_INST = 0;
      delete Comp_transactor;
      Comp_transactor = 0;
      delete trios_monitor_Comp_INST;
      trios_monitor_Comp_INST = 0;
      delete Vga_transactor;
      Vga_transactor = 0;
      delete trios_monitor_Vga_INST;
      trios_monitor_Vga_INST = 0;
      delete Main_Only_Comp_Decomp__Main_Fonction_return_transactor;
      Main_Only_Comp_Decomp__Main_Fonction_return_transactor = 0;
      delete trios_monitor_Main_Only_Comp_Decomp__Main_Fonction_return_INST;
      trios_monitor_Main_Only_Comp_Decomp__Main_Fonction_return_INST = 0;
      delete testbench_INST;
      testbench_INST = 0;
   }
   
   // C++ class functions
   public:
      void setup_debug() ;
   public:
      void install_observe_foreign_signals() ;
   public:
      void debug(const char *varname, int flags, int count) ;
};
#endif
