ReadMe by Mathieu Fondevilla

/*** Function ***/
This CatapulC Module makes the wavelett transform of a picture.
It needs four entries :
	- Three memories of 320*240 words of 8 bits.
	  Src is the one where the picture data has been written.
	  Vga is the one where the transformed picture will be written.
	- An 3 bits unsigned signal to tell the level of transform the user wishes.


/*** Source Files ***/
Main_Trans_Ond_Opt.cpp : Main program
Main_Trans_Ond_Opt.cpp : Main header
TB_Trans_Ond_Opt.cpp   : TestBench for CatapultC-Vsim simulation
image/lena2.pgm        : Picture used by the testBench


/*** Intersting output files ***/
Catapult/Main_Trans_Ond_Opt_v1/psr_vhdl_impl/Main_Trans_Ond_Opt.edf
	=> file to use in the ISE project
Catapult/Main_Trans_Ond_Opt_v1/rtl.vhdl
	=> this file contains the interface you will have to use in your ISE project
	   search for "ENTITY Main_Trans_Ond_Opt" in the file to reach the info
	   /!\ The write_enable signals will work in reversed logic   
Catapult/Main_Trans_Ond_Opt_v1/psr_vhdl_impl/*.rep
	=> report files generated by Precision
trans_ond.pgm
	=> result picture generated by the CatapultC-Vsim simulation


/*** User Manual for using CatapultC ***/
To correctly generate the Main_Trans_Ond_Opt.edf file used for the ISE project,
the user needs to follow these steps :

1- Open CatapultC
	Type "catapult &" in your terminal
2- Set Precision Options
	Go to Tools/Set Options.../Flows/Precision RTL.
	Uncheck the "Add IO Pads" box.
	/!\ Must be done each time CatapultC is openned, the 'save' function
	    doesn't seem to work.
3- Enable Vsim simulation
	Go to the Flow Manager tab in the top-right window.
	Enable SCVerify.
	Some link library paths might need to be added : /usr/lib and /usr/lib/x86_64-linux-gnu.
4- Add input files
	Via the task bar (top left), add input the input files.
	Don't forget to check the "exclude" box for the testBench file.
5- Setup Design
	Click the Setup Design button in the Task bar window
	In the Constraint Editor tab :
	- Technology : 
		- Synthesis Tool : Precision 2012b/Xilinx/ARTIX-7
		- Compatible libraries : Check the RAM-SinglePort box
			(the Base FPGA library should be already checked)
		- Design Frequency : 24MHz
		- "Advanced tools" tab : raise the array size, up to 100024 for instance
		- Apply
	- Handshake : check the signals that follow then apply
		- Start Flag Name : start
		- Done Flag Name  : done
		- Transaction Done Signal
	- void Main_Trans_Ond_Opt(...) : check "top design" and Apply
6- Architecture Constraint
	Click the Architecture Constraint button in the Task bar window
	/!\ Check that you have no question marks for any of your loop
	If you click on a loop, you can unrool and/or pipeline your loops at this stage
7- Schedule
	Click the Schedule button in the Task bar window
	You can check the timing of your solution in the Table and Schedule tabs.
8- Generate the output files
	Click the Generate RTL button in the Task bar window
	In the Project files window, right click on 'Synthesis/Precision/Synthesize rtl.vhdl'
	then 'Launch Precision batch'
	This will genrate the .edf and the report files.
9- Check your solution with SCVerify
	First, in your terminal, go to the Catapult/Main_Trans_Ond_Opt_v1/folder and type :
		"ln -s /usr/lib/x86_64-liux-gnu/crt* ."
	In the Project files window, double click on the simulation you want in Verification/ModelSim
	

	
